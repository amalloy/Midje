#!/usr/bin/env ruby

$directories = %w{examples/adder-webapp examples/basic examples/cake-midje
                  examples/compound-checkers examples/leiningen-midje
                  examples/leiningen-test examples/semi-sweet-examples} 

require 'fileutils'
include FileUtils

def arg(index, error)
  unless ARGV[index]
    puts "No #{error} version"
    exit 1
  end
  ARGV[index]
end


$clojure_version = arg(0, "clojure")
$clojure_contrib_version = arg(1, "clojure_contrib")
$midje_version = arg(2, "midje")


$clojure_jar="#{ENV['HOME']}/.m2/repository/org/clojure/clojure/#{$clojure_version}/clojure-#{$clojure_version}.jar"
$contrib_jar="#{ENV['HOME']}/.m2/repository/org/clojure/clojure-contrib/#{$clojure_contrib_version}/clojure-contrib-#{$clojure_contrib_version}.jar"
$midje_jar="midje-#{$midje_version}.jar"

def remove_jars(*dirs)
  dirs.each do | dir | 
    `rm -f #{File.join(dir, "lib", "clojure-*")}`
    `rm -f #{File.join(dir, "lib", "dev", "*")}`
  end
end

def install_jars(*dirs)
  dirs.each do | dir | 
    cp $clojure_jar, File.join(dir, "lib")
    cp $contrib_jar, File.join(dir, "lib")
    devdir = File.join(dir, "lib", "dev")
    mkdir(devdir) unless File.exist?(devdir)
    cp $midje_jar, devdir
    Dir.glob("lib/*.jar").delete_if { | name | name =~ /clojure.*jar/ }.
      each { | jar | `cp #{jar} #{devdir}`}
  end
end

def make_runs(*dirs)
  dirs.each do | dir | 
    if File.exist?("#{dir}/make-run")
      `(cd #{dir}; make-run)`
    end
  end
end

remove_jars(*$directories)
install_jars(*$directories)
make_runs(*$directories)
exit 0
